#首先clash设置全局
#再：
export http_proxy=http://127.0.0.1:7890
export https_proxy=http://127.0.0.1:7890
export all_proxy=socks5://127.0.0.1:7891
git config --global https.proxy http://127.0.0.1:7890
git config --global https.proxy https://127.0.0.1:7890
git config --global http.proxy socks5://127.0.0.1:7890
git config --global https.proxy socks5://127.0.0.1:7890
#如此当前cmd窗口即翻墙
#git的问题https://juejin.cn/post/7208087678764335159
git config --global https.proxy http://127.0.0.1:7890
git config --global https.proxy https://127.0.0.1:7890
git config --global http.proxy socks5://127.0.0.1:7891
git config --global https.proxy socks5://127.0.0.1:7891



git config --global --unset http.proxy
git config --global --unset https.proxy


#尝试一下
curl -vv https://www.google.com
 
 #windows+V2ray
###对于windows的git
# socks5协议，1080端口修改成自己的本地代理端口
git config –-global http.proxy socks5://127.0.0.1:10808
git config –-global https.proxy socks5://127.0.0.1:10808
# http协议，1081端口修改成自己的本地代理端口
git config –-global http.proxy http://127.0.0.1:10809
git config –-global https.proxy https://127.0.0.1:10809
#如果只是加速GITHUB ， 其他保持不变。 设置如下:
# http协议
git config –global http.https://github.com.proxy https://127.0.0.1:10809
git config –global https.https://github.com.proxy https://127.0.0.1:10809
# socks5协议，1080端口修改成自己的本地代理端口
git config –global http.https://github.com.proxy socks5://127.0.0.1:10808
git config –global https.https://github.com.proxy socks5://127.0.0.1:10808

git config --global --unset http.proxy
git config --global --unset https.proxy

##对于windows的所有vpn
set http_proxy=http://127.0.0.1:10809
set https_proxy=http://127.0.0.1:10809

#git config -l

#huggingface的代理问题
export HF_ENDPOINT=https://hf-mirror.com && source /etc/network_turbo && python gui.py
